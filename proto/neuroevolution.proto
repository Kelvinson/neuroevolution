syntax = "proto3";

import "google/protobuf/empty.proto";

package neuroevolution;

option go_package = "proto";

// Neuro service exposes basic genetic algorithm for neuro-evolution.
service Neuro {
  // Seek returns a new individual to test.
  rpc Seek(google.protobuf.Empty) returns (Individual) {}
  // Show shows the performance of an individual to the server.
  rpc Show(Evaluation) returns (google.protobuf.Empty) {}
  // Status shows the number of evaluations run, as well as the top individual
  rpc Status(google.protobuf.Empty) returns (Top) {}
}

// Individual is a sequence of random seeds used to generate a candidate network.
message Individual {
  repeated uint32 seeds = 1;
}

// Evaluation is an individual and the score that indivual achieved.
message Evaluation {
  Individual individual = 1;
  double score = 2;
}

message Top {
  Individual top_individual = 1;
  double top_score = 2;
  int32 num_iter = 3;
}